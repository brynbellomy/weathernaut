#!/usr/bin/env node


// Generated by CoffeeScript 1.7.1
(function() {
  var Weathernaut, apiKey, argv, astronomy, config, configFilepath, configJson, days, fs, path, usage, weather, whetherNot, zip, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;

  fs = require('fs');

  path = require('path');

  require('colors');

  Weathernaut = require('../').Weathernaut;

  usage = "" + '$'.white.bold + " " + 'weathernaut'.red + " [options]";

  argv = require('optimist').alias('z', 'zip').describe('z', 'The zipcode you want your query to target.').alias('d', 'days').describe('d', 'Number of days (only has an effect with the "forecast" service).')["default"]('d', 10).alias('a', 'astronomy').describe('a', 'Display astronomical data.').boolean('a').alias('w', 'weather').describe('w', 'Display a weather forecast.').boolean('w').usage("Usage:\n  " + usage).argv;

  configFilepath = path.join(process.env['HOME'], '.weathernaut');

  if (!fs.existsSync(configFilepath)) {
    fs.writeFileSync(configFilepath, '{}');
  }

  configJson = fs.readFileSync(configFilepath).toString();

  config = JSON.parse(configJson);

  apiKey = (_ref = argv.apiKey) != null ? _ref : config.apiKey;

  zip = (_ref1 = argv.zip) != null ? _ref1 : config.zip;

  days = (_ref2 = argv.days) != null ? _ref2 : config.days;

  astronomy = (_ref3 = (_ref4 = argv.astronomy) != null ? _ref4 : config.astronomy) != null ? _ref3 : false;

  weather = (_ref5 = (_ref6 = argv.weather) != null ? _ref6 : config.weather) != null ? _ref5 : false;

  if (!((apiKey != null) && (zip != null) && ((astronomy != null) || (weather != null)) && (days != null))) {
    console.error("Missing config/argument value.  Expecting 'apiKey', 'zip', 'days', and either 'astronomy' and/or 'weather'.");
    process.exit(1);
  }

  whetherNot = new Weathernaut(apiKey);

  if (astronomy) {
    process.stdout.write('\n');
    whetherNot.printAstronomicalDataFor(zip);
  }

  if (weather) {
    process.stdout.write('\n');
    whetherNot.printForecastDataFor(zip, days);
  }

  process.stdout.write('\n');

}).call(this);
